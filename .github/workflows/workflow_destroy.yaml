---
name: Terraform Destroy Workflow

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: "AWS Region to use"
        required: true
      aws_bucket_name:
        description: "AWS S3 Bucket to store TF States"
        required: true
      aws_bucket_key_path:
        description: "AWS S3 Bucket Key Path to store state"
        required: true
        default: "redis.tfstate"
      aws_access_key_id:
        description: "Access key id to access AWS"
        required: true
      aws_secret_access_key:
        description: "Secret access key to access AWS"
        required: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8

      - name: Run terraform fmt check
        run: terraform fmt -check -diff -recursive .

  plan_and_destroy:
    name: Plan and Destroy
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ github.event.inputs.aws_region }}
          aws-access-key-id: ${{ github.event.inputs.aws_access_key_id }}
          aws-secret-access-key: ${{ github.event.inputs.aws_secret_access_key }}

      - name: Run bucket prepare script
        run: |
          sed -i "s/BUCKET_NAME/${{ github.event.inputs.aws_bucket_name }}/g" provisioning/prepare_bucket.sh
          sed -i "s/AWS_REGION/${{ github.event.inputs.aws_region }}/g" provisioning/prepare_bucket.sh
          chmod +x provisioning/prepare_bucket.sh
          bash provisioning/prepare_bucket.sh

      - name: Setup region
        run: |
          echo "passing backend variables"
          echo "bucket = \"${{ github.event.inputs.aws_bucket_name }}\"" >> config.s3.tfbackend
          echo "key = \"states/${{ github.event.inputs.aws_bucket_name }}\"" >> config.s3.tfbackend
          echo "region = \"${{ github.event.inputs.aws_region }}\"" >> config.s3.tfbackend
          echo "encrypt = true" >> config.s3.tfbackend
          echo "passing module variables"
          echo "aws_region = ${{ github.event.inputs.aws_region }}" >> terraform.tfvars
          echo "instance_type = ${{ github.event.inputs.aws_instance_type }}" >> terraform.tfvars

      - name: Initialize Terraform
        run: terraform init -input=false -backend-config=config.s3.tfbackend

      - name: Plan Terraform
        id: plan
        run: terraform plan -input=false

      - name: Destroy Terraform
        if: steps.plan.outcome == 'success'
        id: destroy
        run: terraform destroy -input=false -auto-approve
